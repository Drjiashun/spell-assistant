# Variance Threshold
# Variance-Threshold Feature Selection
import numpy as np
from sklearn.preprocessing import StandardScaler
np.random.seed(42)
num_samples = 1000
spectrum_length = 300
X = np.random.randn(num_samples, spectrum_length)
y = np.random.uniform(0, 10, num_samples)
def variance_threshold_feature_selection(
        X: np.ndarray,
        threshold: float = 0.0,
        standardize: bool = True
):
    """
    Perform feature selection based on variance threshold.
    """
    X_processed = StandardScaler().fit_transform(X) if standardize else X.copy()
    try:
        variances = np.var(X_processed, axis=0, ddof=1)
        selected_indices = np.where(variances > threshold)[0]
        selected_features = X[:, selected_indices] if len(selected_indices) > 0 else np.array([])
        return selected_features, selected_indices, variances
    except Exception as e:
        return np.array([]), np.array([]), np.zeros(X.shape[1])
threshold=0.1
selected_features, selected_indices, variances = variance_threshold_feature_selection(
        X,
        threshold=threshold,
        standardize=True
)
print("--- Variance Threshold Feature Selection Results ---")
print(f"Original data shape: {X.shape}")
print(f"Selected features shape: {selected_features.shape}")
print(f"Selected feature indices: {selected_indices.tolist()}")
if len(selected_indices) == 0:
    print("Warning: No features were selected. Consider lowering the threshold.")